{"version":3,"sources":["solar-system.png","components/ApodRender.jsx","components/ApodDateForm.jsx","components/Apod.jsx","components/RoverImage.jsx","components/DisplayCamera.jsx","components/DisplayTime.jsx","components/RoverFilter.jsx","components/Rover.jsx","components/Error.jsx","components/Header.jsx","components/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ApodRender","credits","apodData","this","props","handleApod","hasOwnProperty","copyright","react_default","a","createElement","className","date","media_type","title","width","height","src","url","frameBorder","allowFullScreen","hdurl","alt","concat","explanation","Component","ApodDateForm","onSubmit","changeDate","type","id","name","min","max","currDate","APOD_API_URL","Apod","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","json","wrap","_context","prev","next","fetch","then","response","sent","setState","apodJson","currentDate","console","log","stop","handleChangeDate","e","preventDefault","newDate","target","elements","prevDate","value","apodPrev","_callee2","_context2","state","src_components_ApodDateForm","src_components_ApodRender","RoverImage","handleClick","time","timeQuery","handleApiCall","sol","handlePageClick","currentPage","Number","_ref","arrUrl","arrRover","arrCamera","arrSol","arrDate","arrId","i","rover","camera","photos","length","push","img_src","earth_date","apiUrl","apiRover","apiCamera","apiSol","apiDate","apiId","_x","apply","arguments","imagesPerPage","a1","a2","a3","a4","a5","a6","_this2","zipImages","map","x","_this$state","indexOfLastImage","indexofFirstImage","renderImages","slice","key","rel","href","pageNumbers","Math","ceil","renderPageNumbers","number","onClick","DisplayCamera","handleCameraChange","onCameraChange","onChange","disabled","DisplayTime","handleSol","onSolChange","handleDate","onDateChange","htmlFor","RoverFilter","handleChangeTime","onTimeChange","handleChangeRover","onRoverChange","handleCamera","defaultChecked","src_components_DisplayTime","src_components_DisplayCamera","Rover","handleRover","roverChoice","handleTime","timeChoice","solChoice","dateChoice","cameraChoice","src_components_RoverFilter","src_components_RoverImage","page","pageChoice","Error","Header","logo","react_router_dom","to","Home","App","src_components_Header","react_router","path","exact","component","render","src_components_Apod","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.934ab649.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/solar-system.2542c1e8.png\";","import React, { Component } from 'react';\r\nimport './ApodRender.css';\r\n\r\nclass ApodRender extends Component {\r\n  render() {\r\n    const apodData = this.props.handleApod;\r\n    let credits;\r\n\r\n    // Returns video type if daily APOD is of video media\r\n    const media = () => {\r\n      if (apodData.media_type === 'video') {\r\n        return (\r\n          <div className=\"video-container\">\r\n          <iframe title=\"apod-video\" width=\"853\" height=\"480\" src={apodData.url} frameBorder=\"0\" allowFullScreen/>\r\n          </div>\r\n        )\r\n      } \r\n      // Else returns an image type media\r\n      else {\r\n        return (\r\n          <img src={apodData.hdurl} alt=\"\" className='apod-img' />\r\n        )\r\n      }\r\n    }\r\n\r\n    // Credits original author, if available\r\n    if (apodData.hasOwnProperty('copyright')){\r\n      credits = apodData.copyright;\r\n    } \r\n    // Else credit goes to public domain\r\n    else {\r\n      credits = 'Public Domain';\r\n    }\r\n\r\n    return (\r\n      <div className='apod-wrapper'>\r\n        <h2 className='apod-header'>APOD - Astronomy Picture of the Day</h2>\r\n          <p className='apod-date'>{apodData.date}</p>\r\n          <div className='apod-credits'>\r\n            {media()}\r\n            <p>{`Image Credits: ${credits}`}</p>\r\n          </div>\r\n          <div className='apod-content'>\r\n            <h3>{apodData.title}</h3>\r\n            <p>{apodData.explanation}</p>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ApodRender;\r\n","import React from 'react';\r\nimport '../components/ApodDateForm.css';\r\n\r\nconst ApodDateForm = (props) => {\r\n  return (\r\n    <form className='apod-form' onSubmit={props.changeDate}>\r\n      <p>Search previous APOD posts:</p>\r\n      <input type=\"date\" id=\"prev\" name=\"prevDate\" min=\"1995-06-16\" max={props.currDate} />\r\n      <button className='search-btn'>Search</button>\r\n    </form> \r\n  );\r\n}\r\n\r\nexport default ApodDateForm;","import React, { Component } from 'react';\r\nimport './Apod.css';\r\n\r\nimport ApodRender from './ApodRender';\r\nimport ApodDateForm from './ApodDateForm';\r\n\r\nconst APOD_API_URL='https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY';\r\n\r\nclass Apod extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      apodJson: {},\r\n      apodPrev: '',\r\n      currentDate: '',\r\n    }\r\n  }\r\n\r\n  // Fetches daily APOD data\r\n  componentDidMount = async() => {\r\n    const json = await fetch(APOD_API_URL).then(response => response.json());;\r\n    this.setState({\r\n      apodJson: json,\r\n      currentDate: json.date\r\n    })\r\n    console.log(json);\r\n  }\r\n\r\n  // Fetches new API data for APOD if a new date search is submitted\r\n  handleChangeDate = e => {\r\n    e.preventDefault();\r\n    const newDate = e.target.elements.prevDate.value;\r\n    this.setState({\r\n      apodPrev: newDate\r\n    }, async() => {\r\n      const json = await fetch(`${APOD_API_URL}&date=${this.state.apodPrev}`).then(response => response.json());\r\n      this.setState({\r\n        apodJson: json\r\n      })\r\n      console.log(json);\r\n    })      \r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <ApodDateForm changeDate={this.handleChangeDate} currDate={this.state.currentDate}/>\r\n        <hr />\r\n        <ApodRender handleApod={this.state.apodJson}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Apod;\r\n","import React, { Component } from 'react';\r\nimport './RoverImage.css';\r\n\r\nclass RoverImage extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      apiUrl: [],\r\n      apiRover: [],\r\n      apiCamera: [],\r\n      apiSol: [],\r\n      apiDate: [],\r\n      apiId: [],\r\n      currentPage: '1',\r\n      imagesPerPage: 12\r\n    }\r\n  }\r\n\r\n  // Sets the string to time query depending on 'this.props.time' value and then calls the API\r\n  handleClick = () => {\r\n    if (this.props.time === 'date') {\r\n      const timeQuery = `earth_date=${this.props.date}`\r\n      this.handleApiCall(timeQuery);\r\n    } \r\n    else if (this.props.time === 'sol') {\r\n      const timeQuery = `sol=${this.props.sol}`\r\n      this.handleApiCall(timeQuery);\r\n    }\r\n    else {\r\n      const timeQuery = `sol=none`;\r\n      this.handleApiCall(timeQuery);\r\n    }\r\n  }\r\n\r\n  handlePageClick = (e) => {\r\n    this.setState({\r\n      currentPage: Number(e.target.id)\r\n    });\r\n  }\r\n\r\n  handleApiCall = async(timeQuery) => {\r\n    const json = await fetch(`https://api.nasa.gov/mars-photos/api/v1/rovers/${this.props.rover}/photos?${timeQuery}${this.props.camera}&api_key=DEMO_KEY`).then(response => response.json());\r\n    console.log(json);\r\n    console.log(`https://api.nasa.gov/mars-photos/api/v1/rovers/${this.props.rover}/photos?${timeQuery}${this.props.camera}&api_key=DEMO_KEY`);\r\n    let arrUrl = []\r\n    let arrRover = []\r\n    let arrCamera = []\r\n    let arrSol = []\r\n    let arrDate = []\r\n    let arrId = []\r\n\r\n    // Push data from api into respective arrays\r\n    for (let i = 0; i < json.photos.length; i++) {\r\n      arrUrl.push(json.photos[i].img_src)\r\n      arrRover.push(json.photos[i].rover.name)\r\n      arrCamera.push(json.photos[i].camera.name)\r\n      arrSol.push(json.photos[i].sol)\r\n      arrDate.push(json.photos[i].earth_date)\r\n      arrId.push(json.photos[i].id)\r\n    }\r\n\r\n    // Capture each set of data separately since React child cannot contain objects or nested arrays\r\n    this.setState({\r\n      apiUrl: arrUrl,\r\n      apiRover: arrRover,\r\n      apiCamera: arrCamera,\r\n      apiSol: arrSol,\r\n      apiDate: arrDate,\r\n      apiId: arrId\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // Define function zip that concatenates each element from each set into an array\r\n    const zip = (a1, a2, a3, a4, a5, a6) => a1.map((x,i) => [x, a2[i], a3[i], a4[i], a5[i], a6[i]])\r\n    // Zip states of arrays into nested array\r\n    const zipImages = zip(this.state.apiUrl, this.state.apiRover, this.state.apiCamera, this.state.apiSol, this.state.apiDate, this.state.apiId)\r\n    \r\n    // Logic for displaying images\r\n    const {currentPage, imagesPerPage} = this.state;\r\n    const indexOfLastImage = currentPage * imagesPerPage;\r\n    const indexofFirstImage = indexOfLastImage - imagesPerPage;\r\n    const currentImages = zipImages.slice(indexofFirstImage,indexOfLastImage);\r\n\r\n    // Map nested array into image elements\r\n    const renderImages = currentImages.map((i) => { \r\n      return (\r\n        <div className='gallery' key={i[5]}>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={i[0]}>\r\n            <img src={i[0]} alt=\"\" width=\"600\" height=\"400\" />\r\n          </a>\r\n          <div className=\"desc\">Rover: {i[1]}\r\n            <br />Camera: {i[2]}\r\n            <br />Sol: {i[3]}\r\n            <br />Date: {i[4]}\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n\r\n    // Logic for displaying page numbers\r\n    const pageNumbers = [];\r\n    for (let i = 1; i <= Math.ceil(zipImages.length / this.state.imagesPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n      return (\r\n        <li\r\n          key={number}\r\n          id={number}\r\n          onClick={this.handlePageClick}\r\n        >\r\n          {number}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div className='submit-btn'>\r\n          <button type=\"submit\" onClick={this.handleClick}>Submit</button>\r\n        </div>\r\n        <ul id=\"page-numbers\">\r\n          {renderPageNumbers}\r\n        </ul>\r\n        {renderImages}\r\n        <ul id=\"page-numbers\">\r\n          {renderPageNumbers}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoverImage;","import React, { Component } from 'react';\r\nimport './DisplayCamera.css';\r\n\r\nclass DisplayCamera extends Component {\r\n\r\n  handleCameraChange = (e) => {\r\n    // Pass input change up to parent for state change\r\n    this.props.onCameraChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    const renderCamera = () => {\r\n      if (this.props.rover === 'curiosity') {\r\n        // Returns Curiosity-specific cameras\r\n        return (\r\n          <select onChange={this.handleCameraChange} className='curiosity-select'>\r\n            <option value=\"default\" disabled>Select a camera</option>\r\n\r\n            <option value=\"\">All Cameras</option>\r\n\r\n            <option value=\"&camera=fhaz\">FHAZ - Front Hazard Avoidance Camera</option>\r\n\r\n            <option value=\"&camera=rhaz\">RHAZ - Rear Hazard Avoidance Camera</option>\r\n\r\n            <option value=\"&camera=mast\">MAST - Mast Camera</option>\r\n\r\n            <option value=\"&camera=chemcam\">CHEMCAM - Chemistry and Camera Complex</option>\r\n\r\n            <option value=\"&camera=mahli\">MAHLI - Mars Hand Lens Imager</option>\r\n\r\n            <option value=\"&camera=mardi\">MARDI - Mars Descent Imager</option>\r\n\r\n            <option value=\"&camera=navcam\">NAVCAM - Navigation Camera</option>\r\n          </select>\r\n        )\r\n      }\r\n      else {\r\n        // Returns Spirit and Opportunity-specific cameras\r\n        return (\r\n          <select onChange={this.handleCameraChange} className='spirit-select'>\r\n            <option value=\"default\" disabled>Select a camera</option>\r\n\r\n            <option value=\"\">All Cameras</option>\r\n\r\n            <option value=\"&camera=fhaz\">FHAZ - Front Hazard Avoidance Camera</option>\r\n\r\n            <option value=\"&camera=rhaz\">RHAZ - Rear Hazard Avoidance Camera</option>\r\n\r\n            <option value=\"&camera=navcam\">NAVCAM - Navigation Camera</option>\r\n\r\n            <option value=\"&camera=pancam\">PANCAM - Panoramic Camera</option>\r\n\r\n            <option value=\"&camera=minites\">Mini-TES - Miniature Thermal Emission Spectrometer</option>\r\n          </select>\r\n        )\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {renderCamera()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayCamera;","import React, { Component } from 'react';\r\nimport './DisplayTime.css';\r\n\r\nclass DisplayTime extends Component {\r\n\r\n  handleSol = (e) => {\r\n    // Pass input change up to parent for state change\r\n    this.props.onSolChange(e.target.value)\r\n  }\r\n\r\n  handleDate = (e) => {\r\n    // Pass input change up to parent for state change\r\n    this.props.onDateChange(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    const renderTime = () => {\r\n      if (this.props.time === 'sol') {\r\n        // Return this if Mars Sol is selected as filter\r\n        return (\r\n          <div>\r\n            <label htmlFor=\"marsTime\">Mars Sol:</label>\r\n            <input type=\"number\" id=\"marsSol\" onChange={this.handleSol} />\r\n          </div>\r\n        ) \r\n      }\r\n      else if (this.props.time === 'date') {\r\n        // Return this if Earth Date is selected as filter\r\n        return (\r\n          <div>\r\n            <label htmlFor=\"earthTime\">Earth Date:</label>\r\n            <input type=\"date\" id=\"earthDate\" onChange={this.handleDate} />\r\n          </div>\r\n        ) \r\n      }\r\n      else {\r\n        // Return nothing if All Photos is selected\r\n        return null;\r\n      }\r\n    };\r\n    \r\n\r\n    return (\r\n      <div className='display-time-box'>\r\n        {renderTime()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayTime;","import React, { Component } from 'react';\r\nimport './RoverFilter.css';\r\nimport DisplayCamera from './DisplayCamera';\r\nimport DisplayTime from './DisplayTime';\r\n\r\nclass RoverFilter extends Component {\r\n\r\n  handleChangeTime = (e) => {\r\n    this.props.onTimeChange(e.target.value);\r\n  }\r\n\r\n  handleChangeRover = (e) => {\r\n    this.props.onRoverChange(e.target.value);\r\n  }\r\n\r\n  handleSol = (e) => {\r\n    // Continue passing input from component up to parent for state change\r\n    this.props.onSolChange(e);\r\n  }\r\n\r\n  handleDate = (e) => {\r\n    // Continue passing input from component up to parent for state change\r\n    this.props.onDateChange(e);\r\n  }\r\n\r\n  handleCamera = (e) => {\r\n    // Continue passing input from component up to parent for state change\r\n    this.props.onCameraChange(e);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className='form-box'>\r\n        <fieldset className='field-box'>\r\n          <legend>Please select the NASA Mars Rover:</legend>\r\n          <div className='rover-box'>\r\n            <input type=\"radio\" id=\"curiosity\"\r\n            name=\"rover\" value=\"curiosity\" onChange={this.handleChangeRover} defaultChecked />\r\n            <label htmlFor=\"curiosity\">Curiosity</label>\r\n\r\n            <input type=\"radio\" id=\"opportunity\"\r\n            name=\"rover\" value=\"opportunity\" onChange={this.handleChangeRover} />\r\n            <label htmlFor=\"opportunity\">Opportunity</label>\r\n\r\n            <input type=\"radio\" id=\"spirit\"\r\n            name=\"rover\" value=\"spirit\" onChange={this.handleChangeRover} />\r\n            <label htmlFor=\"spirit\">Spirit</label>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldset className='field-box'>\r\n          <legend>Please select the Earth date / Mars sol :</legend>\r\n          <div className='time-box'>\r\n            <input type=\"radio\" id=\"allTime\"\r\n            name=\"time\" value=\"all\" onChange={this.handleChangeTime} defaultChecked />\r\n            <label htmlFor=\"all\">All photos</label>\r\n\r\n            <input type=\"radio\" id=\"solTime\"\r\n            name=\"time\" value=\"sol\" onChange={this.handleChangeTime} />\r\n            <label htmlFor=\"sol\">Mars Sol</label>\r\n\r\n            <input type=\"radio\" id=\"dateTime\"\r\n            name=\"time\" value=\"date\" onChange={this.handleChangeTime} />\r\n            <label htmlFor=\"date\">Earth Date</label>\r\n          </div>\r\n          <DisplayTime time={this.props.time} onDateChange={this.handleDate} onSolChange={this.handleSol}/>\r\n        </fieldset>\r\n\r\n        <fieldset className='field-box'>\r\n          <legend>Please select the camera:</legend>\r\n          <DisplayCamera rover={this.props.rover} onCameraChange={this.handleCamera}/>\r\n        </fieldset>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoverFilter;","import React, { Component } from 'react';\r\nimport RoverImage from './RoverImage';\r\nimport RoverFilter from './RoverFilter';\r\nimport './Rover.css';\r\n\r\nclass Rover extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      roverChoice: 'curiosity',\r\n      timeChoice: 'all',\r\n      solChoice: 'none',\r\n      dateChoice: 'none',\r\n      cameraChoice: ''\r\n    }\r\n  }\r\n\r\n  handleRover = (e) => {\r\n    // Receives input change from component and sets state\r\n    this.setState({\r\n      roverChoice: e\r\n    })\r\n  }\r\n\r\n  handleTime = (e) => {\r\n    // Receives input change from component and sets state\r\n    this.setState({\r\n      timeChoice: e\r\n    })\r\n  }\r\n\r\n  handleSol = (e) => {\r\n    // Receives input change from subcomponent and sets state\r\n    this.setState({\r\n      solChoice: e\r\n    })\r\n  }\r\n\r\n  handleDate = (e) => {\r\n    // Receives input change from subcomponent and sets state\r\n    this.setState({\r\n      dateChoice: e\r\n    })\r\n  }\r\n\r\n  handleCamera = (e) => {\r\n    // Receives input change from subcomponent and sets state\r\n    this.setState({\r\n      cameraChoice: e\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='rover-container'>\r\n        <h2 className='rover-header'>Mars Rover Photos</h2>\r\n        <p>If you love to see photos on the ground of the Red Planet, you've come to the right place! Join the exploration of Mars with NASA and see images collected by NASA's Mars Rovers, Curiosity, Opportunity and Spirit. Choose which rover to see pictures taken from and search by the Earth date they were taken on or even by Sol (Martian day/rotation). Even better, you could get greedy and return all searches. Each rover also has several cameras onboard that you can filter the results upon.</p>\r\n\r\n        <RoverFilter rover={this.state.roverChoice} time={this.state.timeChoice} onRoverChange={this.handleRover} onTimeChange={this.handleTime} onSolChange={this.handleSol} onDateChange={this.handleDate} onCameraChange={this.handleCamera} />\r\n\r\n        <RoverImage rover={this.state.roverChoice} time={this.state.timeChoice} sol={this.state.solChoice} date={this.state.dateChoice} camera={this.state.cameraChoice} page={this.state.pageChoice} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Rover;","import React from 'react';\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div>\r\n      <h2>HTTP Error 404</h2>\r\n      <p>404 Not Found</p>\r\n      <p>The requested URL was not found on this server</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error;","import { NavLink } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport './Header.css';\r\nimport logo from '../solar-system.png'\r\n\r\nclass Header extends Component {  \r\n  render() {\r\n    return (\r\n      <div className='header'>\r\n        <img src={logo} alt='logo' />\r\n        <NavLink to='/space-daily/'>Home</NavLink>\r\n        <NavLink to='/space-daily/apod'>APOD</NavLink>\r\n        <NavLink to='/space-daily/rover'>Mars Rovers</NavLink>\r\n      </div> \r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className='home-container'>\r\n      <h2 className='home-header'>Home</h2>\r\n      <p>Space Daily is a collection of pages utilising NASA's API to bring you space and Earth related information and imagery.\r\n      </p>\r\n      <p>Check out the APOD tab to see the Astronomy Picture of the Day; in which, contrary to the name isn't always pictures (you get videos on a good day). Otherwise you can see pictures taken by NASA rovers in the Rover tab.</p>\r\n      <p>All information and photos available here are made possible by NASA APIs</p>\r\n    </div>    \r\n  );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route} from 'react-router-dom';\nimport './App.css';\n\nimport Apod from './components/Apod';\nimport Rover from './components/Rover';\nimport Error from './components/Error';\nimport Header from './components/Header';\nimport Home from './components/Home';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id='page-container'>\n        <div id='content-wrap'>\n          <BrowserRouter>\n            <div>\n              <Header />\n              <Switch>\n                <Route path='/space-daily/' exact component={Home} />\n                <Route path='/space-daily/apod' render={()=> <Apod />} />\n                <Route path='/space-daily/rover' component={Rover} />\n                <Route component={Error} />\n              </Switch>\n            </div>\n          </BrowserRouter>\n          <div id='footer'>\n            <hr className='footer-hr'/>\n            <p className='footer-content'>\n              Content sourced from <a href='https://api.nasa.gov/index.html' title='nasa_api'>NASA API</a>.\n            \n              Icons made by <a href=\"https://www.flaticon.com/authors/photo3idea-studio\" title=\"photo3idea_studio\">photo3idea_studio</a> from <a href=\"https://www.flaticon.com/\" \t\t\t    title=\"Flaticon\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" target=\"_blank\" rel=\"noopener noreferrer\">CC 3.0 BY</a></p>\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}